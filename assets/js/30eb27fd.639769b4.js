(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{169:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),l=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||a;return n?o.a.createElement(m,c(c({ref:t},s),{},{components:n})):o.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return l}));var r=n(3),o=n(7),a=(n(0),n(169)),i={title:"Runtime API"},c={unversionedId:"v5/extensions/runtime-api",id:"v5/extensions/runtime-api",isDocsHomePage:!1,title:"Runtime API",description:"Every player interaction is reflected in the redux store.",source:"@site/web-player/v5/extensions/runtime-api.mdx",slug:"/v5/extensions/runtime-api",permalink:"/podlove-web-player/v5/extensions/runtime-api",version:"current",sidebar:"0",previous:{title:"Localization",permalink:"/podlove-web-player/v5/templating/localization"},next:{title:"External Control",permalink:"/podlove-web-player/v5/extensions/plugin-external"}},p=[{value:"Development",id:"development",children:[]}],s={toc:p};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Every player interaction is reflected in the ",Object(a.b)("a",{parentName:"p",href:"http://redux.js.org/docs/api/Store.html"},"redux store"),".\nAccessing the players store enables the full control of the player while running.\nReacting to player events can be done by attatching to the latest action."),Object(a.b)("h4",{id:"getting-store-access"},"Getting store access"),Object(a.b)("p",null,"The store is provided after the player was initialized as a promise resolved. A redux store has two methods available: ",Object(a.b)("inlineCode",{parentName:"p"},"subscribe()"),", to subscribe to store changes, ",Object(a.b)("inlineCode",{parentName:"p"},"getState()")," to get the current state obejct and ",Object(a.b)("inlineCode",{parentName:"p"},"dispatch({ type: 'action', payload: 'data' })")," to dispatch a state change. The following example will set the playtime to one minute after the player was initialized."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-html"},"<script>\n  podlovePlayer('#example', '/path/to/episode/definition/or/object', '/path/to/configuration/or/object').then(store => {\n    store.dispatch({\n      type: 'PLAYER_REQUEST_PLAYTIME',\n      payload: 60000\n    });\n  })\n<\/script>\n")),Object(a.b)("h3",{id:"development"},"Development"),Object(a.b)("p",null,"To improve the development experience it is highly recommended to use the ",Object(a.b)("a",{parentName:"p",href:"https://github.com/reduxjs/redux-devtools"},"redux devtools")," browser extension to get a better understandig about action dispatches and state changes."),Object(a.b)("h4",{id:"store-actions"},"Store Actions"),Object(a.b)("p",null,"The player provides ",Object(a.b)("a",{parentName:"p",href:"https://github.com/podlove/podlove-ui/blob/development/packages/player/actions/types.js"},"dozens of actions")," to interact with the store. To simplify the implementation a ",Object(a.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/@podlove/player-actions"},"dedicated actions package")," can be used:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"$ npm install @podlove/player-actions\n")),Object(a.b)("p",null,"Once you've added this dependency you should be able to use it likewise:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"import { requestPlaytime } from '@podlove/player-actions/timepiece'\n\npodlovePlayer('#example', '/path/to/episode/definition/or/object', '/path/to/configuration/or/object').then(store => {\n  store.dispatch(requestPlaytime(60000));\n})\n")),Object(a.b)("h4",{id:"reacting-to-player-events"},"Reacting to player events"),Object(a.b)("p",null,"Some use cases require a reaction to a player event. This is also possible by subscribing to the store:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-javascript"},"import { BACKEND_PLAY } from '@podlove/player-actions/types'\n\npodlovePlayer('#example', '/path/to/episode/definition/or/object', '/path/to/configuration/or/object').then(store => {\n  store.subscribe(() => {\n    const { lastAction } = store.getState();\n\n    if (lastAction.type === BACKEND_PLAY) {\n      // Do something once the the player starts playing\n    }\n  })\n})\n")))}l.isMDXComponent=!0}}]);