(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{146:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return c}));var o=r(3),n=r(7),a=(r(0),r(169)),i={title:"Podcast Network"},s={unversionedId:"guides/podcast-network",id:"guides/podcast-network",isDocsHomePage:!1,title:"Podcast Network",description:"There comes a time in the life of every podcaster when she has to admit that one podcast is not enough. A separate channel would be nice, right? There are multiple ways to achieve podcast networks using Podlove Publisher, serving different requirements.",source:"@site/publisher/guides/podcast-network.mdx",slug:"/guides/podcast-network",permalink:"/podlove-publisher/guides/podcast-network",version:"current",sidebar:"0",previous:{title:"Podcast Migration",permalink:"/podlove-publisher/guides/podcast-migration"},next:{title:"Understanding Templates",permalink:"/podlove-publisher/guides/understanding-templates"}},l=[{value:"Option 1: WordPress Network",id:"option-1-wordpress-network",children:[]},{value:"Option 2: Shows Module",id:"option-2-shows-module",children:[]},{value:"Option 3: Category based Feeds",id:"option-3-category-based-feeds",children:[]}],p={toc:l};function c(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"There comes a time in the life of every podcaster when she has to admit that one podcast is not enough. A separate channel would be nice, right? There are multiple ways to achieve podcast networks using Podlove Publisher, serving different requirements."),Object(a.b)("p",null,"If you are looking for totally separate podcast channels with their own sites, read ",Object(a.b)("em",{parentName:"p"},"Option 1: WordPress Network"),". If all you episodes are related but you would like to offer separate feeds, ",Object(a.b)("em",{parentName:"p"},"Option 2: Shows Module")," might be for you. If shows seem too heavyweight, read ",Object(a.b)("em",{parentName:"p"},"Option 3: Category based Feeds"),"."),Object(a.b)("h2",{id:"option-1-wordpress-network"},"Option 1: WordPress Network"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Advantages")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"manage multiple podcasts in a WordPress Network"),Object(a.b)("li",{parentName:"ul"},"custom themes, domains etc. for each podcast")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"How To")),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Follow the instructions on ",Object(a.b)("a",{parentName:"li",href:"http://codex.wordpress.org/Create_A_Network"},"WordPress: Create A Network")," to turn your WordPress setup into a network."),Object(a.b)("li",{parentName:"ol"},Object(a.b)("em",{parentName:"li"},"Network Activate")," the Podlove Publisher at ",Object(a.b)("inlineCode",{parentName:"li"},"/wp-admin/network/plugins.php")," if you want to host a podcast on ",Object(a.b)("em",{parentName:"li"},"every")," site in the network. Otherwise, activate the Podlove Publisher separately for each site.")),Object(a.b)("p",null,"Optional: Assign custom domains to network sites using the ",Object(a.b)("a",{parentName:"p",href:"https://wordpress.org/plugins/wordpress-mu-domain-mapping/"},"Domain Mapping Plugin"),"."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Further Reading")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"http://codex.wordpress.org/Create_A_Network"},"WordPress: Create A Network")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"http://codex.wordpress.org/Multisite_Network_Administration"},"WordPress: Multisite Network Administration"))),Object(a.b)("h2",{id:"option-2-shows-module"},"Option 2: Shows Module"),Object(a.b)("p",null,"Use shows to offer feeds to subtopics of your podcast. If your shows are unrelated, a WordPress Network is better suited than the shows module."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Advantages")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"keep all episodes in a single master-feed"),Object(a.b)("li",{parentName:"ul"},"offer separate feeds per show with the option to override feed meta: title, slug, subtitle, summary, image and language")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"How To")),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Activate the ",Object(a.b)("em",{parentName:"li"},"Shows")," Publisher module. Go to ",Object(a.b)("inlineCode",{parentName:"li"},"Publisher -> Modules")," and find the ",Object(a.b)("em",{parentName:"li"},"Metadata")," section."),Object(a.b)("li",{parentName:"ol"},"Create one or multiple shows at ",Object(a.b)("inlineCode",{parentName:"li"},"Publisher -> Shows"),"."),Object(a.b)("li",{parentName:"ol"},"Announce show feeds on your website. You can find them at ",Object(a.b)("inlineCode",{parentName:"li"},"Publisher -> Shows"),".")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"WordPress Templates")),Object(a.b)("p",null,"Internally shows are WordPress taxonomies. That means you also get show archives for your website under ",Object(a.b)("inlineCode",{parentName:"p"},"/show/<show-slug>"),". When creating themes, the following template hierarchy applies:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"taxonomy-shows-<show-slug>.php\ntaxonomy-shows.php\ntaxonomy.php\narchive.php\nindex.php\n")),Object(a.b)("h2",{id:"option-3-category-based-feeds"},"Option 3: Category based Feeds"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Advantages")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"does not require a WordPress Network"),Object(a.b)("li",{parentName:"ul"},"separate feeds by category but keep one big feed containing everything")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"How To")),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Activate the ",Object(a.b)("em",{parentName:"li"},"Categories")," Publisher module. Go to ",Object(a.b)("inlineCode",{parentName:"li"},"Publisher -> Modules")," and find the ",Object(a.b)("em",{parentName:"li"},"Metadata")," section."),Object(a.b)("li",{parentName:"ol"},"Assign categories to your episodes using the episode forms."),Object(a.b)("li",{parentName:"ol"},"Announce the category feeds on your website. For example: You have the feed ",Object(a.b)("inlineCode",{parentName:"li"},"example.com/feed/mp3"),' and created the categories "weather" and "plants". Then the feeds ',Object(a.b)("inlineCode",{parentName:"li"},"example.com/category/weather/feed/mp3")," and ",Object(a.b)("inlineCode",{parentName:"li"},"example.com/category/plants/feed/mp3")," are available now.")),Object(a.b)("p",null,"Good to know: There are also feeds for arbitrary search terms. ",Object(a.b)("inlineCode",{parentName:"p"},"example.com/search/fnord/feed/mp3"),' is a dynamic feed for episodes mentioning "Fnord".'),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Further Reading")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"http://codex.wordpress.org/WordPress_Feeds"},"WordPress: Feeds"))))}c.isMDXComponent=!0},169:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return m}));var o=r(0),n=r.n(o);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=n.a.createContext({}),c=function(e){var t=n.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},b=function(e){var t=c(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=n.a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=c(r),u=o,m=b["".concat(i,".").concat(u)]||b[u]||d[u]||a;return r?n.a.createElement(m,s(s({ref:t},p),{},{components:r})):n.a.createElement(m,s({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);