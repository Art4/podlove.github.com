(self.webpackChunkpodlove_docs=self.webpackChunkpodlove_docs||[]).push([[3115],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return d},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(r),f=a,m=u["".concat(p,".").concat(f)]||u[f]||c[f]||o;return r?n.createElement(m,i(i({ref:t},d),{},{components:r})):n.createElement(m,i({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1649:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return b},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return f}});var n=r(2122),a=r(9756),o=r(7294),i=r(3905),l=r(3552),p=r(9941),s=function(e){function t(t){return e.call(this,t)||this}return(0,l.Z)(t,e),t.prototype.render=function(){var e=(0,p.ZP)({default:{container:{display:"flex"},image:{display:"block",margin:"1em",width:"150px"}}});return o.createElement("div",{style:e.container},this.props.integrations.map((function(t){return o.createElement("a",{style:e.image,href:t.link,key:t.image},o.createElement("img",{src:t.image,title:t.title}))})))},t}(o.Component),d=["components"],c={id:"web-player-landing",title:"Podlove Web Player",sidebar_label:"Introduction",slug:"/"},u={unversionedId:"web-player-landing",id:"web-player-landing",isDocsHomePage:!1,title:"Podlove Web Player",description:"The fast, flexible and responsive podcast player powered by podlove meta data.",source:"@site/web-player/index.mdx",sourceDirName:".",slug:"/",permalink:"/podlove-web-player/",editUrl:"https://github.com/podlove/podlove.github.com/edit/master/web-player/web-player/index.mdx",version:"current",sidebar_label:"Introduction",frontMatter:{id:"web-player-landing",title:"Podlove Web Player",sidebar_label:"Introduction",slug:"/"},sidebar:"0",next:{title:"Getting Started",permalink:"/podlove-web-player/wordpress-plugin/getting-started"}},f=[{value:"Made for Podcasters",id:"made-for-podcasters",children:[]},{value:"Used by",id:"used-by",children:[]}],m={toc:f};function b(e){var t=e.components,r=(0,a.Z)(e,d);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The fast, flexible and responsive podcast player powered by podlove meta data.")),(0,i.kt)("p",null,"Podlove Web Player is a HTML5 based web player for audio and video media files that is optimized and extended for the specific needs of podcasters. This player integrates well with the Podlove Podcast Publisher but can also be used independent from it."),(0,i.kt)("h3",{id:"made-for-podcasters"},"Made for Podcasters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Podcast Chapters"),(0,i.kt)("li",{parentName:"ul"},"Transcripts"),(0,i.kt)("li",{parentName:"ul"},"Sharing & Embedding"),(0,i.kt)("li",{parentName:"ul"},"Download integrated"),(0,i.kt)("li",{parentName:"ul"},"Audio Controls, including playback speed"),(0,i.kt)("li",{parentName:"ul"},"Supports multiple audio file formats"),(0,i.kt)("li",{parentName:"ul"},"Supports live streams")),(0,i.kt)("h3",{id:"used-by"},"Used by"),(0,i.kt)(s,{integrations:[{title:"Der Spiegel",image:"https://www.spiegel.de/public/spon/images/logos/fb_logo_default.jpg",link:"https://www.spiegel.de"},{title:"Norddeutscher Rundfunk",image:"https://pbs.twimg.com/profile_images/1156477415947984896/-CuyGRgs_400x400.jpg",link:"https://www.ndr.de/"},{title:"LetsCast.fm",image:"https://letscast.fm/assets/lets-cast-logo-f6162920ee5c8687b9ea60595613aecadd6547b25ad353e714d99b4840f0380b.png",link:"https://letscast.fm/"}],mdxType:"Integrations"}))}b.isMDXComponent=!0}}]);